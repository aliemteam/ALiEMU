<?php
/**
 * Functionality related to LearnDash
 *
 * @package ALiEMU
 */

namespace ALIEMU\Plugins\Learndash;

defined( 'ABSPATH' ) || exit;

/**
 * Modifies some of the LearnDash custom post type registration arguments.
 *
 * @param mixed[] $args  Array of post type arguments.
 * @param string  $post_type  The post type of the custom post type being registered.
 */
function modify_post_types( array $args, string $post_type ) : array {
	switch ( $post_type ) {
		case ALIEMU_POST_TYPES['course']:
			$args['show_in_rest']          = true;
			$args['rest_controller_class'] = 'ALIEMU\API\Courses_Controller';
			$args['rest_base']             = 'courses';
			return $args;
		case ALIEMU_POST_TYPES['lesson']:
			$args['show_in_rest']          = true;
			$args['rest_controller_class'] = 'ALIEMU\API\Lessons_Controller';
			$args['rest_base']             = 'lessons';
			return $args;
		case ALIEMU_POST_TYPES['quiz']:
			$args['show_in_rest']          = true;
			$args['rest_controller_class'] = 'ALIEMU\API\Quizzes_Controller';
			$args['rest_base']             = 'quizzes';
			return $args;
		default:
			return $args;
	}
}
add_filter( 'register_post_type_args', __NAMESPACE__ . '\modify_post_types', 10, 2 );

/**
 * Adds "Course Short Description" field to the block meta.
 *
 * @param WP_Post[] $posts Array of posts.
 * @return WP_Post[]
 */
function course_fields( $posts ) : array {
	foreach ( $posts as $key => $post ) {
		// FIXME: this guards against a bug introduced in LearnDash 2.5.8
		if ( ! array_key_exists( 'post_type', $post ) || 'sfwd-courses' !== $post['post_type'] ) {
			continue;
		}

		$extra_fields = [
			'course_short_description' => [
				'name'         => 'Course Short Description',
				'type'         => 'textarea',
				'help_text'    => 'Short description for the course. Try to keep word cound â‰¤ 20 words (MAXIMUM = 30 words)',
				'show_in_rest' => true,
			],
			'recommendedHours'         => [
				'name'         => 'Recommended III Hours',
				'type'         => 'text',
				'help_text'    => 'The amount of hours that you recommend students claim for this course.',
				'show_in_rest' => true,
			],
		];

		$posts[ $key ]['fields'] = $posts[ $key ]['fields'] + $extra_fields;
	}
	return $posts;
}
add_filter( 'learndash_post_args', __NAMESPACE__ . '\course_fields' );

/**
 * Adds a warning message if the short description field of a post exceeds 30 words.
 *
 * "Words" here are groups of characters separated by whitespace OR dashes.
 * Consider the following examples:
 *
 *     "two-thirds of a cup" = 5 words.
 *     "supercalifragilisticexpialidocious" = 1 word.
 *     "hello-there-how-are-you" = 5 words.
 *
 * @global WP_Post $post
 */
function check_description_length() : void {
	global $post;

	// Not on a post page.
	if ( ! function_exists( 'get_current_screen' ) || ! $post ) {
		return;
	}

	// Not on a course edit page.
	$screen = get_current_screen();
	if ( 'sfwd-courses' !== $screen->id ) {
		return;
	}

	$meta        = get_post_meta( $post->ID, '_sfwd-courses' );
	$description = $meta[0]['sfwd-courses_course_short_description'];
	$words       = preg_split( '/(?: |(?<=\S)\p{Pd}(?=\S))/u', $description );
	if ( count( $words ) > 30 ) {
		?>
		<div class="notice notice-error is-dismissible">
			<p>
				<a href="#sfwd-courses_course_short_description"><code>Course Short Description</code></a>
				word count <strong>must be less than 31 words</strong>. Please revise.
			</p>
		</div>
		<?php
	}
}
add_action( 'admin_notices', __NAMESPACE__ . '\check_description_length' );

/**
 * Removes the outer 2 nested `<div>` tags that LearnDash added in `2.5.7`
 *
 * @param string $output The raw HTML output generated by the shortcode.
 */
function fix_course_list_output( $output ) : string {
	$output = preg_replace( '/<div.+?>/', '', $output, 2 );
	$output = preg_replace( '/<\/div>\s*<\/div>\s*$/', '', $output );
	return $output;
}
add_filter( 'ld_course_list', __NAMESPACE__ . '\fix_course_list_output' );

